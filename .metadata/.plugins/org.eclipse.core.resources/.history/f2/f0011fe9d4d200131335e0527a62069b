package upload;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.SequenceFile;
import org.apache.hadoop.io.Text;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;


public class sequenceUploader {
	
	//Input Folder and output file to generate
	String inputFolder;
	String outputFile;
	
	//Cluster configuration 
	Configuration conf;
	FileSystem fs;
	
	//Variables needed for reading the files in the folder
	String currentFile;
	FileReader fileReader;
	BufferedReader bufferedReader;
	String content;
	
	public sequenceUploader() throws IOException{
		//Open configuration for cluster
		conf= new Configuration();
		fs = FileSystem.get(conf);
		
	}
	
	public void generateSequenceFile(String iFolder, String oFile){
		
		//Setup the local variables
		inputFolder = iFolder;
		outputFile = oFile;
		
		
		//Reset content
		content="";
		
		
		//Open the folder and take all the files inside
		File folder = new File(inputFolder);
		File [] listofFiles= folder.listFiles();
		
	
		//Key and value to be written in the file
		Text key = new Text();
		Text value = new Text();
		
		//Open the sequence file
		Path outputPath = new Path(outputFile);
		@SuppressWarnings("deprecation")
		SequenceFile.Writer fileOutput = new SequenceFile.Writer(fs, conf, outputPath, org.apache.hadoop.io.Text.class, org.apache.hadoop.io.Text.class);
		
		
		//Iterate for all the files of the input folder\
		for (File file: listofFiles){
			if (file.isFile()){
				
				//Read the file 
				currentFile=file.getName();
				fileReader =new FileReader(folder.getAbsolutePath()+"/"+currentFile);
				bufferedReader = new BufferedReader(fileReader);
				
				content="";
				
				while (bufferedReader.ready()){
					content+=bufferedReader.readLine();
				}
				
				
				//Write the content of the file to the sequence file
				key =new Text(currentFile);
				value=new Text(content);
				//Append the key value to the file
				fileOutput.append(key,value);
			}
		}
	
	
		//Close the sequence file
		fileOutput.close();		


	
		
		
	}
	
	
	
	

}
